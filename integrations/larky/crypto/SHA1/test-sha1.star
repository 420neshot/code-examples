load("@stdlib//unittest", "unittest")
load("@vendor//asserts", "asserts")
load("@vgs//http/request", "VGSHttpRequest")
load("@vgs//vault", "vault")
load("@stdlib//builtins", builtins="builtins")
load("@stdlib//json", json="json")
load("@vendor//Crypto/Hash/SHA1", SHA1="SHA1")


def process(input, ctx):    
    body = json.loads(str(input.body))
    h = SHA1.new()
    h.update(bytes("somesalt"+ body['message'], 'utf-8'))
    body['message'] = h.hexdigest()
    input.body = builtins.bytes(json.dumps(body))
    return input


def test_process():
    # keys below are not real (generated by randomizer)
    headers = {}
    body = b'{"message": "4242424242424242"}'
    input = VGSHttpRequest("https://test.com/post", data=body, headers=headers, method='POST')
    response = process(input, None)
    expected_body = b'{"message":"e951117c03e65e4ce40ef14d1214178e9a998984"}'
    print(response.body)
    print(expected_body)
    asserts.assert_that(response.body).is_equal_to(expected_body)


def _testsuite():
  _suite = unittest.TestSuite()
  _suite.addTest(unittest.FunctionTestCase(test_process))
  return _suite

_runner = unittest.TextTestRunner()
_runner.run(_testsuite())

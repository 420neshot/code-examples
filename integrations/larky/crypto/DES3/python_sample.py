import os, hashlib, warnings, requests, json
import base64
from Crypto.Cipher import DES3

class PayTest(object):

    def __init__(self):
        pass

    def getKey(self,secret_key):
        hashedseckey = hashlib.md5(secret_key.encode("utf-8")).hexdigest()
        hashedseckeylast12 = hashedseckey[-12:]
        seckeyadjusted = secret_key.replace('TSTSECK-', '')
        seckeyadjustedfirst12 = seckeyadjusted[:12]
        return seckeyadjustedfirst12 + hashedseckeylast12

    def encryptData(self, key, plainText):
        cipher = DES3.new(key, DES3.MODE_ECB)
        padding = 0
        if len(plainText) % 8 != 0:
            padding = 8 - (len(plainText) % 8)
            plainText = plainText + bytes([padding] * padding)
        text = plainText.encode('utf-8')
        print('>>> text:', text)
        encrypted = base64.b64encode(cipher.encrypt(text)).decode("utf-8")
        return encrypted

    def pay_via_card(self):
        # keys below  are not real (generated by randomizer)
        data = {
            'PBFPubKey': 'TSTPUBK-4d1e634d904ededaf0b635d5a0a2f06d-X',
            "cardno": "5438898014560229",
            "cvv": "890",
            "expirymonth": "09",
            "expiryyear": "23",
            "currency": "USD",
            "country": "US",
            'suggested_auth': 'cpin',
            'pin': '3310',
            "amount": "100",
            "email": "john.wick@domain.com",
            "firstname": "John",
            "lastname": "Wick"
        }

        sec_key = 'TSTSECK-714bb902065f722b150a36e9578e6fe5-X'

        hashed_sec_key = self.getKey(sec_key)

        encrypt_3DES_key = self.encryptData(hashed_sec_key, json.dumps(data))

        payload = {
            "PBFPubKey": "TSTPUBK-4d1e634d904ededaf0b635d5a0a2f06d-X",
            "client": encrypt_3DES_key,
            "alg": "3DES-24"
        }

        endpoint = "https://test.com"

        headers = {
            'content-type': 'application/json',
        }
        print('>>> payload: ', payload)

        
rave = PayTest()
rave.pay_via_card()
